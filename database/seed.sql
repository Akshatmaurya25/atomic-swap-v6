-- Demo data for Yellow Network Arbitrage Platform
-- This script populates the database with realistic sample data

-- Insert sample opportunities (these would normally be generated by the arbitrage detection system)\nINSERT INTO public.opportunities (\n    token_pair,\n    source_chain,\n    target_chain,\n    source_platform,\n    target_platform,\n    source_price,\n    target_price,\n    potential_profit,\n    profit_percentage,\n    liquidity,\n    estimated_gas,\n    time_window,\n    risk,\n    trending,\n    executable,\n    expires_at\n) VALUES \n    ('ETH/USDC', 'Ethereum', 'Polygon', 'Uniswap V3', 'QuickSwap', 2245.50, 2251.75, 125.00, 2.8, 50000.00, 0.025, 120, 'low', true, true, NOW() + INTERVAL '10 minutes'),\n    ('WBTC/ETH', 'Ethereum', 'Arbitrum', 'SushiSwap', 'Camelot', 15.2341, 15.3892, 89.50, 1.9, 25000.00, 0.018, 180, 'medium', true, true, NOW() + INTERVAL '15 minutes'),\n    ('MATIC/USDT', 'Polygon', 'Ethereum', 'QuickSwap', 'Uniswap V2', 0.8745, 0.8901, 45.60, 3.2, 75000.00, 0.032, 90, 'low', false, true, NOW() + INTERVAL '8 minutes'),\n    ('ARB/ETH', 'Arbitrum', 'Ethereum', 'Camelot', 'Balancer', 0.000421, 0.000433, 67.80, 2.5, 18000.00, 0.021, 150, 'medium', true, true, NOW() + INTERVAL '12 minutes'),\n    ('USDC/DAI', 'Ethereum', 'Polygon', 'Curve', 'ApeSwap', 0.9998, 1.0015, 23.45, 0.8, 120000.00, 0.015, 300, 'low', false, true, NOW() + INTERVAL '20 minutes'),\n    ('LINK/ETH', 'Polygon', 'Arbitrum', 'SushiSwap', 'Uniswap V3', 0.005234, 0.005298, 156.70, 3.4, 32000.00, 0.028, 200, 'high', true, true, NOW() + INTERVAL '5 minutes'),\n    ('UNI/USDC', 'Ethereum', 'Polygon', 'Uniswap V3', 'QuickSwap', 6.78, 6.89, 78.90, 4.1, 28000.00, 0.035, 110, 'medium', false, true, NOW() + INTERVAL '7 minutes'),\n    ('AAVE/ETH', 'Arbitrum', 'Ethereum', 'Balancer', 'SushiSwap', 0.04567, 0.04687, 234.50, 2.9, 15000.00, 0.042, 160, 'high', true, true, NOW() + INTERVAL '14 minutes'),\n    ('CRV/USDT', 'Polygon', 'Ethereum', 'Curve', 'Uniswap V2', 0.3456, 0.3523, 34.20, 1.7, 45000.00, 0.022, 240, 'low', false, true, NOW() + INTERVAL '18 minutes'),\n    ('SNX/ETH', 'Ethereum', 'Arbitrum', 'Uniswap V3', 'Camelot', 0.001234, 0.001267, 98.30, 2.6, 22000.00, 0.031, 130, 'medium', true, true, NOW() + INTERVAL '9 minutes');\n\n-- Insert sample price feed data\nINSERT INTO public.price_feeds (\n    token_pair,\n    chain,\n    platform,\n    price,\n    volume_24h,\n    liquidity,\n    timestamp\n) VALUES \n    ('ETH/USDC', 'Ethereum', 'Uniswap V3', 2245.50, 125000000.00, 85000000.00, NOW() - INTERVAL '1 minute'),\n    ('ETH/USDC', 'Polygon', 'QuickSwap', 2251.75, 45000000.00, 32000000.00, NOW() - INTERVAL '1 minute'),\n    ('WBTC/ETH', 'Ethereum', 'SushiSwap', 15.2341, 28000000.00, 45000000.00, NOW() - INTERVAL '2 minutes'),\n    ('WBTC/ETH', 'Arbitrum', 'Camelot', 15.3892, 12000000.00, 18000000.00, NOW() - INTERVAL '1 minute'),\n    ('MATIC/USDT', 'Polygon', 'QuickSwap', 0.8745, 35000000.00, 55000000.00, NOW() - INTERVAL '3 minutes'),\n    ('MATIC/USDT', 'Ethereum', 'Uniswap V2', 0.8901, 15000000.00, 25000000.00, NOW() - INTERVAL '1 minute'),\n    ('ARB/ETH', 'Arbitrum', 'Camelot', 0.000421, 18000000.00, 28000000.00, NOW() - INTERVAL '2 minutes'),\n    ('ARB/ETH', 'Ethereum', 'Balancer', 0.000433, 8000000.00, 12000000.00, NOW() - INTERVAL '1 minute');\n\n-- Function to create demo user data (this would be called when a user signs up)\nCREATE OR REPLACE FUNCTION create_demo_data_for_user(user_uuid UUID)\nRETURNS VOID AS $$\nBEGIN\n    -- Insert sample trading bots\n    INSERT INTO public.trading_bots (\n        user_id,\n        name,\n        strategy,\n        status,\n        pairs,\n        chains,\n        settings,\n        performance,\n        created_at\n    ) VALUES \n        (\n            user_uuid,\n            'ETH Arbitrage Bot',\n            'arbitrage',\n            'active',\n            ARRAY['ETH/USDC', 'ETH/USDT'],\n            ARRAY['Ethereum', 'Polygon', 'Arbitrum'],\n            jsonb_build_object(\n                'minProfitPercentage', 1.5,\n                'maxInvestment', 5000,\n                'stopLoss', -2.0,\n                'slippageTolerance', 0.5,\n                'gasLimit', 500000\n            ),\n            jsonb_build_object(\n                'totalProfit', 1247.85,\n                'profitPercentage', 18.3,\n                'trades', 47,\n                'successRate', 89.4,\n                'balance', 6847.85,\n                'lastTrade', NOW() - INTERVAL '2 hours'\n            ),\n            NOW() - INTERVAL '15 days'\n        ),\n        (\n            user_uuid,\n            'Multi-Chain Scanner',\n            'arbitrage',\n            'active',\n            ARRAY['WBTC/ETH', 'LINK/ETH', 'UNI/USDC'],\n            ARRAY['Ethereum', 'Polygon', 'Arbitrum'],\n            jsonb_build_object(\n                'minProfitPercentage', 2.0,\n                'maxInvestment', 3000,\n                'stopLoss', -1.5,\n                'slippageTolerance', 0.8,\n                'gasLimit', 400000\n            ),\n            jsonb_build_object(\n                'totalProfit', 892.40,\n                'profitPercentage', 12.7,\n                'trades', 32,\n                'successRate', 84.4,\n                'balance', 3892.40,\n                'lastTrade', NOW() - INTERVAL '4 hours'\n            ),\n            NOW() - INTERVAL '8 days'\n        ),\n        (\n            user_uuid,\n            'Stablecoin Arb',\n            'arbitrage',\n            'paused',\n            ARRAY['USDC/USDT', 'USDC/DAI'],\n            ARRAY['Ethereum', 'Polygon'],\n            jsonb_build_object(\n                'minProfitPercentage', 0.3,\n                'maxInvestment', 10000,\n                'stopLoss', -0.5,\n                'slippageTolerance', 0.1,\n                'gasLimit', 200000\n            ),\n            jsonb_build_object(\n                'totalProfit', 234.60,\n                'profitPercentage', 4.2,\n                'trades', 156,\n                'successRate', 94.9,\n                'balance', 10234.60,\n                'lastTrade', NOW() - INTERVAL '1 day'\n            ),\n            NOW() - INTERVAL '5 days'\n        );\n    \n    -- Insert sample activities\n    INSERT INTO public.activities (\n        user_id,\n        type,\n        status,\n        description,\n        details,\n        amount,\n        currency,\n        transaction_hash,\n        created_at\n    ) VALUES \n        (\n            user_uuid,\n            'arbitrage',\n            'completed',\n            'Successful ETH/USDC arbitrage between Ethereum and Polygon',\n            jsonb_build_object(\n                'sourceChain', 'Ethereum',\n                'targetChain', 'Polygon',\n                'profit', 45.67,\n                'profitPercentage', 2.3\n            ),\n            45.67,\n            'USDC',\n            '0x1234567890abcdef1234567890abcdef12345678',\n            NOW() - INTERVAL '2 hours'\n        ),\n        (\n            user_uuid,\n            'bot_start',\n            'completed',\n            'Started ETH Arbitrage Bot',\n            jsonb_build_object(\n                'botName', 'ETH Arbitrage Bot',\n                'strategy', 'arbitrage'\n            ),\n            NULL,\n            NULL,\n            NULL,\n            NOW() - INTERVAL '4 hours'\n        ),\n        (\n            user_uuid,\n            'deposit',\n            'completed',\n            'Deposited ETH to wallet',\n            jsonb_build_object(\n                'chain', 'Ethereum',\n                'wallet', '0xabcdef1234567890abcdef1234567890abcdef12'\n            ),\n            2.5,\n            'ETH',\n            '0xabcdef1234567890abcdef1234567890abcdef12',\n            NOW() - INTERVAL '1 day'\n        ),\n        (\n            user_uuid,\n            'trade',\n            'completed',\n            'Executed WBTC/ETH swap on Arbitrum',\n            jsonb_build_object(\n                'pair', 'WBTC/ETH',\n                'chain', 'Arbitrum',\n                'platform', 'Camelot',\n                'profit', 23.45\n            ),\n            23.45,\n            'ETH',\n            '0x9876543210fedcba9876543210fedcba98765432',\n            NOW() - INTERVAL '6 hours'\n        ),\n        (\n            user_uuid,\n            'arbitrage',\n            'failed',\n            'Failed arbitrage attempt - insufficient liquidity',\n            jsonb_build_object(\n                'pair', 'LINK/ETH',\n                'reason', 'Insufficient liquidity',\n                'lossAmount', 12.34\n            ),\n            -12.34,\n            'ETH',\n            NULL,\n            NOW() - INTERVAL '8 hours'\n        );\n    \n    -- Insert sample trades\n    INSERT INTO public.trades (\n        user_id,\n        bot_id,\n        type,\n        status,\n        pair,\n        source_chain,\n        target_chain,\n        amount_in,\n        amount_out,\n        expected_profit,\n        actual_profit,\n        gas_used,\n        source_tx_hash,\n        target_tx_hash,\n        executed_at,\n        created_at\n    ) SELECT \n        user_uuid,\n        (SELECT id FROM trading_bots WHERE user_id = user_uuid LIMIT 1),\n        'arbitrage',\n        'executed',\n        'ETH/USDC',\n        'Ethereum',\n        'Polygon',\n        1000.00,\n        1045.67,\n        45.67,\n        43.25,\n        0.025,\n        '0x1234567890abcdef1234567890abcdef12345678',\n        '0x8765432109876543210987654321098765432109',\n        NOW() - INTERVAL '2 hours',\n        NOW() - INTERVAL '2 hours 5 minutes'\n    WHERE EXISTS (SELECT 1 FROM trading_bots WHERE user_id = user_uuid);\n    \n    -- Insert portfolio snapshots\n    INSERT INTO public.portfolio_snapshots (\n        user_id,\n        total_value,\n        assets,\n        profit_loss,\n        profit_loss_percentage,\n        created_at\n    ) VALUES \n        (\n            user_uuid,\n            21247.85,\n            jsonb_build_object(\n                'ETH', 5.67,\n                'USDC', 8432.10,\n                'WBTC', 0.25,\n                'MATIC', 1250.00,\n                'ARB', 500.00\n            ),\n            2374.85,\n            12.6,\n            NOW() - INTERVAL '1 hour'\n        ),\n        (\n            user_uuid,\n            20873.00,\n            jsonb_build_object(\n                'ETH', 5.45,\n                'USDC', 8200.00,\n                'WBTC', 0.24,\n                'MATIC', 1200.00,\n                'ARB', 480.00\n            ),\n            2000.00,\n            10.6,\n            NOW() - INTERVAL '1 day'\n        );\n    \n    -- Add some user favorites\n    INSERT INTO public.user_favorites (user_id, opportunity_id)\n    SELECT user_uuid, id \n    FROM opportunities \n    WHERE trending = true \n    LIMIT 3;\n    \nEND;\n$$ LANGUAGE plpgsql;\n\n-- Create some sample wallet data function\nCREATE OR REPLACE FUNCTION create_sample_wallet_for_user(user_uuid UUID, wallet_address TEXT)\nRETURNS VOID AS $$\nBEGIN\n    INSERT INTO public.user_wallets (\n        user_id,\n        address,\n        name,\n        chain,\n        assets,\n        total_value,\n        performance,\n        is_primary\n    ) VALUES \n        (\n            user_uuid,\n            wallet_address,\n            'Primary Wallet',\n            'Ethereum',\n            jsonb_build_object(\n                'ETH', jsonb_build_object('balance', 5.67, 'value', 12745.65),\n                'USDC', jsonb_build_object('balance', 8432.10, 'value', 8432.10),\n                'WBTC', jsonb_build_object('balance', 0.25, 'value', 10567.25)\n            ),\n            31745.00,\n            jsonb_build_object(\n                'totalProfit', 2374.85,\n                'profitPercentage', 8.1,\n                'bestTrade', 145.67,\n                'worstTrade', -23.45,\n                'winRate', 87.3\n            ),\n            true\n        );\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Insert some real-time price data for the last few minutes\nDO $$\nDECLARE\n    i INTEGER;\nBEGIN\n    FOR i IN 1..10 LOOP\n        INSERT INTO public.price_feeds (\n            token_pair,\n            chain,\n            platform,\n            price,\n            volume_24h,\n            liquidity,\n            timestamp\n        ) VALUES \n            ('ETH/USDC', 'Ethereum', 'Uniswap V3', \n             2245.50 + (random() - 0.5) * 20, \n             125000000.00 + (random() - 0.5) * 10000000, \n             85000000.00 + (random() - 0.5) * 5000000, \n             NOW() - (i * INTERVAL '1 minute')),\n            ('WBTC/ETH', 'Arbitrum', 'Camelot', \n             15.3892 + (random() - 0.5) * 0.1, \n             12000000.00 + (random() - 0.5) * 2000000, \n             18000000.00 + (random() - 0.5) * 3000000, \n             NOW() - (i * INTERVAL '1 minute'));\n    END LOOP;\nEND $$;